# DIRENV MODULE CONFIGURATION
# ==============================================================================
# DESCRIPTION:
#   Configuration file parsed during activation of direnv (either using `direnv`
#   or when sourcing `.direnv/activate_direnv`)'

# Ansible module
# ------------------------------------------------------------------------------
# Set ansible environment variable
[ansible]
# Choose the default configuration for the first initialisation
default_config="config_name_1"

[ansible:config_name_1]
# Set the path to ansible configuration file. If this file does not exists, it
# will be created from template in .direnv/templates/ansible.cfg.template
ANSIBLE_CONFIG="/path/to/ansible.cfg"
# Path to inventory file or folder
inventory="${DIRENV_ROOT}/inventory"

# Direnv management module
# ------------------------------------------------------------------------------
# Simple module to load parent direnv configuration. Only work when using
# `direnv`
[direnv_management]
# When activated using `direnv`, tell `direnv to load parent directory
# environment
source_up=false
# Set the output log to `DEBUG`, `INFO`, `WARNING` or `ERROR` (default)
DIRENV_DEBUG_LEVEL="DEBUG"

# Folder module
# ------------------------------------------------------------------------------
# Ensure new folders exists
[folders]
# Specify folders which must exist, if not they will be created. Path
# relative to `DIRENV_ROOT`.
new=tmp/folder_1
new=tmp/folder_2

# Go management module
# ------------------------------------------------------------------------------
# Update GOPATH to install go modules locally
[go_management]
# Specify the path to the go directory
GOPATH="${DIRENV_ROOT}/.direnv/tmp/go"

# Keepass module
# ------------------------------------------------------------------------------
# Set keepassxc environment variable to be able to use the keepassxc-cli wrapper
# provided in `.direnv/src/keepass.sh`.
[keepass]
# Specify the path to the keypass database
KEEPASS_DB=/path/to/keepass.db
# Specify the path to the keyfile unlocking the keepass database
KEEPASS_KEYFILE=/another/path/to/keyfile
# Specify an explicit name in an environment variable to be able to use it in
# your shell prompt.
KEEPASS_NAME=Perso

# Kubernetes module
# ------------------------------------------------------------------------------
# Set Kubernetes environment variable
[kubernetes]
# Path to a specific kubeconfig file relatively to the root of the direnv. If
# not set, will find for file with kube_config in their name and take the first
# result.
KUBECONFIG=path/to/kube_config

# Molecule module
# ------------------------------------------------------------------------------
# Set molecule environment variable
[molecule]
# Explicitly tell molecule to show all log
MOLECULE_NO_LOG=1

# Openstack module
# ------------------------------------------------------------------------------
# Manage openstack environment variable. Main section [openstack] have only one
# parameter `default` to define default openstack project configuration name.
# Use section of the form [openstack:project_config_name_1] to define variable
# per project configuration name.
# **REMARK**: VALUE OF `default` MUST BE THE SAME VALUE OF A SUBSECTION AS SHOWN
# BELOW:
# ```
# [openstack]
# default=project_config_name_1
#
# [openstack:project_config_name_1]
# OS_AUTH_URL=https://test.com
# ...
# ```
[openstack]
# Default project configuration name when activating the direnv for the first
# time
# NO DEFAULT VALUE
default=project_config_name_1

# Configuration for each openstack project
[openstack:project_config_name_1]
# Value of openstack variable OS_AUTH_URL in openrc.sh
OS_AUTH_URL=https://test.com
# Value of openstack variable OS_PROJECT_ID in openrc.sh
OS_PROJECT_ID=1234
# Value of openstack variable OS_PROJECT_NAME in openrc.sh
OS_PROJECT_NAME=project_name_1
# Value of openstack variable OS_USERNAME in openrc.sh
OS_USERNAME=username
# Value of openstack variable OS_PASSWORD in openrc.sh, to avoid setup a value
# in clear text, as for any other value in this ini file, start the value with
# `cmd:` to tell the parser that value will be obtain by executing the command
# specified after `¢md:`. In the example below, parser will execute command
# `echo "foo"`, so value of OS_PASSWORD will be `foo`
OS_PASSWORD=cmd:echo "foo"
# Value of openstack variable OS_INTERFACE in openrc.sh
OS_INTERFACE=interface
# Value of openstack variable OS_REGION_NAME in openrc.sh
OS_REGION_NAME=region_name
# Value of openstack variable OS_IDENTITY_API_VERSION in openrc.sh
OS_IDENTITY_API_VERSION=3
# Value of openstack variable OS_USER_DOMAIN_NAME in openrc.sh
OS_USER_DOMAIN_NAME=domain_name

# Configuration for each openstack project
[openstack:project_config_name_2]
# Value of openstack variable OS_AUTH_URL in openrc.sh
OS_AUTH_URL=https://test.com
# Value of openstack variable OS_PROJECT_ID in openrc.sh
OS_PROJECT_ID=4321
# Value of openstack variable OS_PROJECT_NAME in openrc.sh
OS_PROJECT_NAME=project_name_2
# Value of openstack variable OS_USERNAME in openrc.sh
OS_USERNAME=username
# Value of openstack variable OS_PASSWORD in openrc.sh, to avoid setup a value
# in clear text, as for any other value in this ini file, start the value with
# `cmd:` to tell the parser that value will be obtain by executing the command
# specified after `¢md:`. In the example below, parser will execute command
# `echo "bar"`, so value of OS_PASSWORD will be `bar`
OS_PASSWORD=cmd:echo "bar"
# Value of openstack variable OS_INTERFACE in openrc.sh
OS_INTERFACE=interface
# Value of openstack variable OS_REGION_NAME in openrc.sh
OS_REGION_NAME=region_name
# Value of openstack variable OS_IDENTITY_API_VERSION in openrc.sh
OS_IDENTITY_API_VERSION=3
# Value of openstack variable OS_USER_DOMAIN_NAME in openrc.sh
OS_USER_DOMAIN_NAME=domain_name

# Packer module
# ------------------------------------------------------------------------------
# Set packer environment variable
[packer]
# Activate packer log
PACKER_LOG=1
# Set where packer log will be outputed
PACKER_LOG_PATH=path/to/packer.log

# Path management module
# ------------------------------------------------------------------------------
# Update the variable `PATH`
[path_management]
# Add .direnv/bin to variable `PATH`
add_direnv_to_path=true
# Add specified path to the variable `PATH`
new_path=${DIRENV_ROOT}/path/to/be/added:${DIRENV_ROOT}/another/bin

# Python management module
# ------------------------------------------------------------------------------
# Manage python virtual environment and ensure python binaries
[python_management]
# Main python version, to ensure python binaries installed have right version
# If not set, default is 3
python_version=3
# Main python release, to ensure python binaries installed have right release
# If not set, default is 8
python_release=8
# Main python patch, to ensure python binaries installed have right patch
# If not set, default is 0
python_patch=0
# Specify which requirements to install, either :
#   - `prod`: Only install requirements.prod.txt
#   - `docs`: Only install requirements.docs.txt
#   - `dev`: Install all requirements.*.txt
# Default is dev
requirements_type=dev

# Tmux module
# ------------------------------------------------------------------------------
# Create and/or attach session which name is the directory folder
[tmux_management]
# Override default tmux session name
session_name=direnv_template
# Command to execute when starting the tmux session
command=task list project:direnv_template

# vimrc_local module
# ------------------------------------------------------------------------------
# Write a `.vimrc.local` file at the root of the directory
[vimrc_local]
# Gitlab API access token
vim_gitlab_token=cmd: cat my_file_with_api_token
# URL to your gitlab server
vim_gitlab_server=https://my.gitlab.tld
# ID of your project in your gitlab server
vim_gitlab_project_id=12345
# (optional) Should the plugin send altering requests to the server? (default `true`)
vim_gitlab_alter=true
# (optional) Print debug message (default `false`)                                    |
vim_gitlab_debug=false

# ------------------------------------------------------------------------------
# VIM MODELINE
# vim: ft=dosini
# ------------------------------------------------------------------------------
